// 추상 클래스: 서브 클래스에 공통 기능을 물려주는 목적으로 존재하는 클래스
package ch13.j;

public class Test01 {

  public static void main(String[] args) {
    
    
    // 지붕을 열수있는 자동차와 짐을 싣는 덤프트럭이 필요해서 해당 클래스를 정의하였고 ,
    // 다음과 같이 사용한다 .
    
    Convertible c1 = new Convertible();
    DumpTruck c2 = new DumpTruck();
    // 그러다 두클래스의 공통점이 있어서 
    // 소스코드의 유지관리를 쉽게하기위해 슈퍼클래스"car"를 정의하였다 . 
    // Car 클래스는 직접 사용하기위해 정의한 클래스가 아니라
    // 소스코드 관리를 위해 여러 클래스의 일반 기능을 모아 둔 클래스이다 
    // 이런 클래스는 직접 사용 하지 못하게 막는것이 좋다 
    // 특정 클래스의 인스턴스를 생성하지 못하도록 하기위해 만든 문법이 추상 클래스이다
    // 어떤 클래스를 추상클래스로 지정하면 인스턴스를 생서할수있따
    // 특히 car 클래스 처럼 generalization 을 통해 생성한 클래스라면
    // 단지 서브 클래스에게 공통필드나 메서드를 상속해주는 용도로만 사용토록 만들기위해
    // 추상클래스로 지정하는것이 좋다
    
    
    
    
    // 거꾸로 어떤 클래스가 추상클래스 라면
    // 그클래스 를 만든 개발자는 해당클래스를 직접 사용하지말고
    // 서브클래스를 만들어 기능을 확장한 다음에 사용하라는 의도 임을 알아야 한다 .
    
    // 그러나 추상 클래스의 인스턴스는 생성할 수 없다.
    //Car c3 = new Car(); // 컴파일 오류!
    
  }


}
